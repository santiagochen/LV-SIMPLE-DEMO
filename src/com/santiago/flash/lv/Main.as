package com.santiago.flash.lv {		import flash.display.MovieClip;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.utils.Dictionary;	import com.greensock.TweenMax;	import flash.events.MouseEvent;	import flash.ui.MouseCursor;	import flash.ui.Mouse;			public class Main extends MovieClip {		static const iconGapX:Number = 5;		static const iconHolderX:Number = 300;		static const iconHolderY:Number = 480;		static const pauseBtnX:Number = 384;		static const pauseBtnY:Number = 240;		private var iconPosX:Number = 0;		private var iconNameArr: Array = [										  {name:"app.png",w:40,h:40},										  {name:"qr.png",w:40,h:40},										  {name:"vos.png",w:93,h:40},										  {name:"weibo.png",w:40,h:40},										  {name:"youku.png",w:40,h:40},										  ];		private var iconHolder:MovieClip = new MovieClip();		private var pauseBtn:Loader = new Loader()		private var pauseHolder:MovieClip = new MovieClip();		private var allready:Number = 0;				public function Main() {			 resolveIconArr(iconNameArr)			 pauseBtn.load(new URLRequest("resume.png"));		}				private function resolveIconArr(arr:Array){			for(var i:int = 0; i<arr.length; i++){				var loader:Loader = new Loader();				loader.load(new URLRequest(arr[i].name));				loader.name = arr[i].name;				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoaderCom);				iconHolder.addChild(loader);				loader.addEventListener(MouseEvent.CLICK, iconClick);				loader.x = iconPosX;				iconPosX += arr[i].w+iconGapX;								}			}				private function onLoaderCom(event:Event):void{			allready++;			if(allready==iconNameArr.length){				var blankOver:MovieClip = new MovieClip();				blankOver.graphics.beginFill(0xffffff,0);				blankOver.graphics.drawRect(0,0,860,520);				blankOver.graphics.endFill();				this.addChild(blankOver);				stage.addEventListener(MouseEvent.MOUSE_OVER, userOver);				stage.addEventListener(MouseEvent.MOUSE_OUT, userOut);								this.addChild(iconHolder);				iconHolder.alpha = 0;				iconHolder.x = iconHolderX;				iconHolder.y = iconHolderY;				//iconHolder.alpha = 1;				//iconHolder.mouseChildren = false;				makeButton(iconHolder);				//iconHolder.addEventListener(MouseEvent.MOUSE_OVER, iconHolderOver);				//iconHolder.addEventListener(MouseEvent.MOUSE_OUT, iconHolderOut);				}			}					private function iconHolderOver(event:MouseEvent):void{			Mouse.cursor = MouseCursor.BUTTON;			}		private function iconHolderOut(event:MouseEvent):void{			Mouse.cursor = MouseCursor.AUTO;			}				private function userOver(event:MouseEvent):void{			TweenMax.to(iconHolder,0.1,{alpha:1,x:iconHolderX,y:iconHolderY});			}		private function userOut(event:MouseEvent):void{			TweenMax.to(iconHolder,0.1,{alpha:0,x:iconHolderX,y:iconHolderY+40});			}				private function iconClick(event:MouseEvent):void{			stage.removeEventListener(MouseEvent.MOUSE_OVER, userOver);			stage.removeEventListener(MouseEvent.MOUSE_OUT, userOut);						pauseHolder.graphics.beginFill(0xffffff,0);			pauseHolder.graphics.drawRect(0,0,860,520);			pauseHolder.graphics.endFill();			this.addChild(pauseHolder);			pauseBtn.x = pauseBtnX;			pauseBtn.y = pauseBtnY;			makeButton(pauseBtn);			pauseHolder.addChild(pauseBtn)			pauseBtn.addEventListener(MouseEvent.CLICK, clickResume);						TweenMax.to(iconHolder,0.1,{alpha:0,x:iconHolderX,y:1000});						this.myplayer.pause();			}		private function makeButton(tar:*):void{			tar.addEventListener(MouseEvent.MOUSE_OVER, iconHolderOver);			tar.addEventListener(MouseEvent.MOUSE_OUT, iconHolderOut);			}				private function clickResume(event:MouseEvent):void{			this.removeChild(pauseHolder);			stage.addEventListener(MouseEvent.MOUSE_OVER, userOver);			stage.addEventListener(MouseEvent.MOUSE_OUT, userOut);			this.myplayer.play();			}	}	}